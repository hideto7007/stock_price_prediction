name: UnitTest

on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Build Docker image
        run: |
          docker build --no-cache -t unittest .

      - name: Run tests inside Docker container and Unittest
        run: |
          docker run --rm -v ${{ github.workspace }}:/stock_price_prediction --name unittest unittest /bin/bash -c "\
            cd /stock_price_prediction && \
            echo "SECRET_KEY=${{ env.SECRET_KEY }}" >> .env && \
            echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ env.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env && \
            echo "ALGORITHM=${{ env.ALGORITHM }}" >> .env && \
            echo "DATABASE_PATH=${{ env.DATABASE_PATH }}" >> .env && \
            echo "TEST_CREATE_PATH=${{ env.TEST_CREATE_PATH }}" >> .env && \
            echo "TEST_DELETE_PATH=${{ env.TEST_DELETE_PATH }}" >> .env && \
            echo "TEST_DATABASE_PATH=${{ env.TEST_DATABASE_PATH }}" >> .env && \
            echo '.env content:' && cat .env && \
            pip install pipenv && \
            pipenv install -r requirements.txt && \
            pipenv run pip list && \
            pipenv run coverage run -m unittest discover && \
            pipenv run coverage report"
